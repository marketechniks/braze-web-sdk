import e, { OPTIONS as L } from "../../managers/braze-instance.js";
import { ContentCards, subscribeToContentCardsUpdates } from "../index.js";
import g from "../content-cards-provider-factory.js";
import {
  destroyFeedHtml as z,
  detectFeedImpressions as q,
  feedToHtml as I,
  LAST_REQUESTED_REFRESH_DATA_ATTRIBUTE as M,
  refreshFeed as $,
  registerFeedSubscriptionId as k,
  updateFeedCards as A,
} from "../../common/feed-display.js";
import { setCardHeight as B } from "../../Card/display/card-display.js";
import { setupFeedUI as F } from "../../ui/js/index.js";
import r from "../../../shared-lib/braze-shared-lib.js";
export function showContentCards(n, t) {
  if (!e.rr()) return;
  F();
  let o = !1;
  null == n && ((n = document.body), (o = !0));
  const a = e.nn(L.tn) || e.nn(L.en) || !1,
    i = g.er().Ls(!1);
  "function" == typeof t && A(i, t(i.cards.slice()), i.lastUpdated, null, a);
  const s = I(i, a, o),
    l = g.er(),
    f = l.Cs();
  (null == i.lastUpdated ||
    new Date().valueOf() - i.lastUpdated.valueOf() > ContentCards.mr) &&
    (null == f || new Date().valueOf() - f > ContentCards.mr) &&
    (r.j.info(
      `Cached content cards were older than max TTL of ${ContentCards.mr} ms, requesting an update from the server.`,
    ),
    $(i, s),
    l.ws(new Date().valueOf()));
  const c = new Date().valueOf(),
    u = subscribeToContentCardsUpdates(function (n) {
      const e = s.querySelectorAll(".ab-refresh-button")[0];
      if (null != e) {
        let n = 500,
          t = (n -= new Date().valueOf() - c);
        const o = s.getAttribute(M);
        o && ((t = parseInt(o)), isNaN(t) || (n -= new Date().valueOf() - t)),
          setTimeout(
            function () {
              e.className = e.className.replace(/fa-spin/g, "");
            },
            Math.max(n, 0),
          );
      }
      let o = n.cards;
      "function" == typeof t && (o = t(o.slice())),
        A(i, o, n.lastUpdated, s, a);
    });
  k(u, s);
  const d = function (n) {
    const t = n.querySelectorAll(".ab-feed");
    let e = null;
    for (let o = 0; o < t.length; o++) t[o].parentNode === n && (e = t[o]);
    null != e
      ? (z(e), null != e.parentNode && e.parentNode.replaceChild(s, e))
      : n.appendChild(s),
      setTimeout(function () {
        s.className = s.className.replace("ab-hide", "ab-show");
      }, 0),
      o && s.focus(),
      q(i, s),
      B(i.cards, n);
  };
  var m;
  null != n
    ? d(n)
    : (window.onload =
        ((m = window.onload),
        function () {
          "function" == typeof m && m(new Event("oldLoad")), d(document.body);
        }));
}
