import { STORAGE_KEYS as i } from "../managers/storage-manager.js";
import ue from "../models/braze-event.js";
import _t from "../models/identifier.js";
import { convertMsToSeconds as h } from "../util/date-utils.js";
import r from "../../shared-lib/braze-shared-lib.js";
export default class Dt {
  constructor(s, t, i, e) {
    (this.u = s),
      (this.wt = t),
      (this.yt = i),
      (this.wl = e),
      (this.u = s),
      (this.wt = t),
      (this.yt = i),
      (this.Sl = 1e3),
      (null == e || isNaN(e)) && (e = 1800),
      e < this.Sl / 1e3 &&
        (r.j.info(
          "Specified session timeout of " +
            e +
            "s is too small, using the minimum session timeout of " +
            this.Sl / 1e3 +
            "s instead.",
        ),
        (e = this.Sl / 1e3)),
      (this.wl = e);
  }
  jl(s, t) {
    return new ue(this.wt.getUserId(), r.q.xl, s, t.iu, { d: h(s - t.vl) });
  }
  Yh() {
    const s = this.u.tu(i.eu.Dl);
    return null == s ? null : s.iu;
  }
  El() {
    const s = new Date().valueOf(),
      t = this.yt.dl(),
      e = this.u.v(i.k.zl);
    if (null != e && null == t) return !1;
    let n = !1;
    return (
      null == e ? (n = !0) : null != t && (n = s - e > 1e3 * t),
      n && this.u.D(i.k.zl, s),
      n
    );
  }
  Cl(s, t) {
    return null == t || null == t.Gl || (!(s - t.vl < this.Sl) && t.Gl < s);
  }
  co() {
    const s = new Date().valueOf(),
      t = s + 1e3 * this.wl,
      e = this.u.tu(i.eu.Dl);
    if (this.Cl(s, e)) {
      let n = "Generating session start event with time " + s;
      if (null != e) {
        let s = e.Nl;
        s - e.vl < this.Sl && (s = e.vl + this.Sl),
          this.u.Hl(this.jl(s, e)),
          (n += " (old session ended " + s + ")");
      }
      (n += ". Will expire " + t.valueOf()), r.j.info(n);
      const l = new _t(r.Z.Y(), t);
      this.u.Hl(new ue(this.wt.getUserId(), r.q.Wl, s, l.iu)),
        this.u.uu(i.eu.Dl, l);
      return null == this.u.v(i.k.zl) && this.u.D(i.k.zl, s), l.iu;
    }
    if (null != e) return (e.Nl = s), (e.Gl = t), this.u.uu(i.eu.Dl, e), e.iu;
  }
  kl() {
    const s = this.u.tu(i.eu.Dl);
    null != s &&
      (this.u.ql(i.eu.Dl), this.u.Hl(this.jl(new Date().valueOf(), s)));
  }
}
