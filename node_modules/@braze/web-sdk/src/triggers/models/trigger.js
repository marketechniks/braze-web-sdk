import {
  dateFromUnixTimestamp as l,
  rehydrateDateAfterJsonization as w,
} from "../../util/date-utils.js";
import r from "../../../shared-lib/braze-shared-lib.js";
import ri from "./trigger-condition.js";
import { validateValueIsFromEnum as G } from "../../util/code-utils.js";
export default class pt {
  constructor(t, i = [], s, e, r = 0, h, l, o = 0, n = pt.Ju, a, u, d) {
    (this.id = t),
      (this.Vu = i),
      (this.startTime = s),
      (this.endTime = e),
      (this.priority = r),
      (this.type = h),
      (this.data = l),
      (this.Gu = o),
      (this.Ku = n),
      (this.sn = a),
      (this.Ou = u),
      (this.Qu = d),
      (this.id = t),
      (this.Vu = i || []),
      void 0 === s && (s = null),
      (this.startTime = s),
      void 0 === e && (e = null),
      (this.endTime = e),
      (this.priority = r || 0),
      (this.type = h),
      (this.Gu = o || 0),
      null == a && (a = 1e3 * (this.Gu + 30)),
      (this.sn = a),
      (this.data = l),
      null != n && (this.Ku = n),
      (this.Ou = u),
      (this.Qu = d || null);
  }
  Uu(t) {
    return (
      null == this.Qu || (this.Ku !== pt.Ju && t - this.Qu >= 1e3 * this.Ku)
    );
  }
  Wu(t) {
    this.Qu = t;
  }
  Xu(t) {
    const i = t + 1e3 * this.Gu;
    return Math.max(i - new Date().valueOf(), 0);
  }
  Yu(t) {
    const i = new Date().valueOf() - t,
      s = null == t || isNaN(i) || null == this.sn || i < this.sn;
    return (
      s ||
        r.j.info(
          `Trigger action ${this.type} is no longer eligible for display - fired ${i}ms ago and has a timeout of ${this.sn}ms.`,
        ),
      !s
    );
  }
  static fromJson(t) {
    const i = t.id,
      s = [];
    for (let i = 0; i < t.trigger_condition.length; i++)
      s.push(ri.fromJson(t.trigger_condition[i]));
    const e = l(t.start_time),
      r = l(t.end_time),
      h = t.priority,
      o = t.type,
      n = t.delay,
      a = t.re_eligibility,
      u = t.timeout,
      d = t.data,
      m = t.min_seconds_since_last_trigger;
    return G(
      pt.Wr,
      o,
      "Could not construct Trigger from server data",
      "Trigger.Types",
    )
      ? new pt(i, s, e, r, h, o, d, n, a, u, m)
      : null;
  }
  tt() {
    const t = [];
    for (let i = 0; i < this.Vu.length; i++) t.push(this.Vu[i].tt());
    return {
      i: this.id,
      c: t,
      s: this.startTime,
      e: this.endTime,
      p: this.priority,
      t: this.type,
      da: this.data,
      d: this.Gu,
      r: this.Ku,
      tm: this.sn,
      ss: this.Ou,
      ld: this.Qu,
    };
  }
  static Yn(t) {
    const i = [],
      s = t.c || [];
    for (let t = 0; t < s.length; t++) i.push(ri.Yn(s[t]));
    return new pt(
      t.i,
      i,
      w(t.s),
      w(t.e),
      t.p,
      t.t,
      t.da,
      t.d,
      t.r,
      t.tm,
      t.ss,
      t.ld,
    );
  }
}
(pt.Wr = { Vr: "inapp", Zu: "templated_iam" }), (pt.Ju = -1);
