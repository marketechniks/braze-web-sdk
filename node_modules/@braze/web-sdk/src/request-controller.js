import C from "./util/net.js";
import ue from "./models/braze-event.js";
import s from "./common/event-logger.js";
import { randomInclusive as D } from "./util/math.js";
import t from "./models/request-result.js";
import r from "../shared-lib/braze-shared-lib.js";
import { STORAGE_KEYS as i } from "./managers/storage-manager.js";
import E from "./managers/subscription-manager.js";
import vt from "./Push/utils/push-utils.js";
import T from "./util/request-header-utils.js";
export default class Lt {
  constructor(t, i, s, e, h, o, n, r, u, l) {
    (this.cn = t),
      (this.baseUrl = i),
      (this._e = s),
      (this.fn = e),
      (this.wt = h),
      (this.yt = o),
      (this.u = n),
      (this.fu = r),
      (this.Mo = u),
      (this.$t = l),
      (this.cn = t),
      (this.baseUrl = i),
      (this.gu = 0),
      (this.OE = n.RE() || 0),
      (this.vu = null),
      (this._e = s),
      (this.fn = e),
      (this.wt = h),
      (this.yt = o),
      (this.u = n),
      (this.Mo = u),
      (this.$t = l),
      (this.fu = r),
      (this.wu = new E()),
      (this.ku = null),
      (this.yu = 50),
      (this.ju = !1);
  }
  Su(t, i) {
    return !t && !i && this.Mo.Jh() >= this.yu;
  }
  $u(t) {
    let i = this._e.El();
    if (t.length > 0) {
      const s = this.wt.getUserId();
      for (const e of t) {
        const t = (!e.userId && !s) || e.userId === s;
        e.type === r.q.Wl && t && (i = !0);
      }
    }
    return i;
  }
  qu(t = !1, s = !1, e = !0, h, o, n, u = !1, l = !1) {
    e && this.Au();
    const a = this.u.cE(),
      c = this.u.AE();
    let d = !1;
    const f = (t, s) => {
        let r = !1;
        T.Ws(this.u, T.Os.Na, new Date().valueOf()),
          C.Xs({
            url: this.baseUrl + "/data/",
            data: t,
            headers: s,
            O: (e) => {
              null != t.respond_with &&
                t.respond_with.triggers &&
                (this.gu = Math.max(this.gu - 1, 0)),
                this.$t.Zs(t, e, s)
                  ? (this.Mo.ti(),
                    this.yt.ul(e),
                    (null != t.respond_with &&
                      t.respond_with.user_id != this.wt.getUserId()) ||
                      (null != t.device && this.u.D(i.k.Fa, t.device),
                      null != t.sdk_metadata &&
                        (this.u.D(i.k.Kh, t.sdk_metadata),
                        this.u.D(i.k.Wh, this._e.Yh())),
                      this.fu(e),
                      T.si(this.u, T.Os.Na, 1),
                      "function" == typeof h && h()))
                  : e.auth_error && (r = !0);
            },
            error: () => {
              null != t.respond_with &&
                t.respond_with.triggers &&
                (this.gu = Math.max(this.gu - 1, 0)),
                this.$t.Qh(t.events, t.attributes),
                "function" == typeof o && o();
            },
            ei: (t) => {
              if (("function" == typeof n && n(t), e && !d)) {
                if (t && !r) this.Cu();
                else {
                  T.hi(this.u, T.Os.Na);
                  let t = this.vu;
                  (null == t || t < 1e3 * this.OE) && (t = 1e3 * this.OE),
                    this.Cu(Math.min(3e5, D(1e3 * this.OE, 3 * t)));
                }
                d = !0;
              }
            },
          });
      },
      m = this.$u(a),
      g = s || m;
    if (this.Su(u, m))
      return void r.j.info(
        "Declining to flush data due to 50 consecutive authentication failures",
      );
    if (e && !this.$t.Pa(a, c, t, g))
      return this.Cu(), void ("function" == typeof n && n(!0));
    const v = this.$t.$a(t, g, a, c, l);
    g && this.gu++;
    let p = !1;
    if (v)
      for (const t of v)
        this.$t.Qs(t.requestData, () => f(t.requestData, t.headers)), (p = !0);
    this.Mo.wh() && e && !p
      ? this.Cu()
      : m && (r.j.info("Invoking new session subscriptions"), this.wu.Dt());
  }
  Du() {
    return this.gu > 0;
  }
  Cu(t = 1e3 * this.OE) {
    this.ju ||
      (this.Au(),
      (this.ku = window.setTimeout(() => {
        if (document.hidden) {
          const t = "visibilitychange",
            i = () => {
              document.hidden ||
                (document.removeEventListener(t, i, !1), this.qu());
            };
          document.addEventListener(t, i, !1);
        } else this.qu();
      }, t)),
      (this.vu = t));
  }
  Au() {
    null != this.ku && (clearTimeout(this.ku), (this.ku = null));
  }
  initialize() {
    (this.ju = !1), this.Cu();
  }
  destroy() {
    this.wu.removeAllSubscriptions(),
      this.Mo.Gh(),
      this.Au(),
      (this.ju = !0),
      this.qu(void 0, void 0, !1, void 0, void 0, void 0, void 0, !0),
      (this.ku = null);
  }
  pr(t) {
    return this.wu.It(t);
  }
  openSession() {
    const t = this._e.Yh() !== this._e.co();
    t && (this.u.uE(i.eu.Zo), this.u.uE(i.eu.su)),
      this.qu(void 0, !1, void 0, void 0, void 0),
      this.pu(),
      t &&
        import("./Push/push-manager-factory.js").then((t) => {
          if (this.ju) return;
          const s = t.default.m();
          if (
            null != s &&
            (vt.isPushPermissionGranted() || vt.isPushBlocked())
          ) {
            const t = () => {
                s.Sn()
                  ? r.j.info(
                      "Push token maintenance is disabled, not refreshing token for backend.",
                    )
                  : s.subscribe();
              },
              e = (i, s) => {
                s && t();
              },
              h = () => {
                const s = this.u.v(i.k.Bn);
                (null == s || s) && t();
              },
              o = r.ts.Zt;
            new r.es(o, r.j).hr(o.rs.cu, e, h);
          }
        });
  }
  Fu() {
    this.u.ni(i.k.Ri), this.u.ni(i.k.gs), this.u.ni(i.k.rn);
  }
  changeUser(t, s, e) {
    const h = this.wt.getUserId();
    if (h !== t) {
      this._e.kl(),
        this.Fu(),
        null != h && this.qu(void 0, !1, void 0, void 0, void 0),
        this.wt.ru(t),
        e ? this.Mo.setSdkAuthenticationSignature(e) : this.Mo.yh();
      for (let t = 0; t < s.length; t++) s[t].changeUser(null == h);
      null != h && this.u.ni(i.k.L),
        this.u.ni(i.k.Fa),
        this.openSession(),
        r.j.info('Changed user to "' + t + '".');
    } else {
      let i = "Doing nothing.";
      e &&
        this.Mo.jh() !== e &&
        (this.Mo.setSdkAuthenticationSignature(e),
        (i = "Updated SDK authentication signature")),
        r.j.info(`Current user is already ${t}. ${i}`);
    }
  }
  requestImmediateDataFlush(t) {
    this.Au(), this._e.co();
    this.qu(
      void 0,
      void 0,
      void 0,
      void 0,
      () => {
        r.j.error(
          "Failed to flush data, request will be retried automatically.",
        );
      },
      t,
      !0,
    );
  }
  requestFeedRefresh() {
    this._e.co(), this.qu(!0);
  }
  $r(t, i) {
    this._e.co(),
      r.j.info("Requesting explicit trigger refresh."),
      this.qu(void 0, !0, void 0, t, i);
  }
  $n(t, i) {
    const e = r.q.Tu,
      h = { a: t, l: i },
      o = s.N(e, h);
    return o && r.j.info(`Logged alias ${t} with label ${i}`), o;
  }
  Gn(i, e, h) {
    if (this.yt.hu(e))
      return (
        r.j.info(`Custom Attribute "${e}" is blocklisted, ignoring.`), new t()
      );
    const o = { key: e, value: h },
      n = s.N(i, o);
    if (n) {
      const t = "object" == typeof h ? JSON.stringify(h, null, 2) : h;
      r.j.info(`Logged custom attribute: ${e} with value: ${t}`);
    }
    return n;
  }
  setLastKnownLocation(t, i, e, h, o, n) {
    const u = { latitude: i, longitude: e };
    null != h && (u.altitude = h),
      null != o && (u.ll_accuracy = o),
      null != n && (u.alt_accuracy = n);
    const l = s.N(r.q.Lu, u, t || void 0);
    return (
      l &&
        r.j.info(
          `Set user last known location as ${JSON.stringify(u, null, 2)}`,
        ),
      l
    );
  }
  vr(t, i) {
    const s = this._e.co();
    return new ue(this.wt.getUserId(), r.q.Mu, t, s, { cid: i });
  }
  pu() {
    const t = r.ts.Zt;
    new r.es(t, r.j).setItem(t.rs.Na, 1, {
      baseUrl: this.baseUrl,
      data: { api_key: this.cn, device_id: this.fn.ce().id },
      userId: this.wt.getUserId(),
      sdkAuthEnabled: this.Mo.wh(),
    });
  }
  yr(t) {
    for (const i of t)
      if (i.api_key === this.cn) this.$t.Qh(i.events, i.attributes);
      else {
        const t = r.ts.Zt;
        new r.es(t, r.j).setItem(t.rs.wr, r.Z.Y(), i);
      }
  }
  Zn(i, e, h) {
    if (this.yt.hu(i))
      return (
        r.j.info(`Custom Attribute "${i}" is blocklisted, ignoring.`), new t()
      );
    let o, n;
    return (
      null === e && null === h
        ? ((o = r.q.Pu), (n = { key: i }))
        : ((o = r.q.Ru), (n = { key: i, latitude: e, longitude: h })),
      s.N(o, n)
    );
  }
  au(t, i) {
    const e = { group_id: t, status: i };
    return s.N(r.q.Nu, e);
  }
}
