import Q from "../../util/browser-detector.js";
import { logInAppMessageHtmlClick } from "../log-in-app-message-html-click.js";
import { getUser as Z } from "../../Core/get-user.js";
import { InAppMessage } from "../index.js";
import { keys as oo } from "../../util/code-utils.js";
import { OperatingSystems as V } from "../../util/device-constants.js";
import { parseQueryStringKeyValues as ut } from "../../util/url-utils.js";
import { WindowUtils as Y } from "../../util/window-utils.js";
import e from "../../managers/braze-instance.js";
import r from "../../../shared-lib/braze-shared-lib.js";
import { BRAZE_MUST_BE_INITIALIZED_ERROR as P } from "../../common/constants.js";
export default function ct(t, o, n, s, i, u) {
  const c = document.createElement("iframe");
  c.setAttribute("title", "Modal Message"),
    i && (c.style.zIndex = (i + 1).toString());
  const a = (e) => {
      const o = e.getAttribute("href"),
        r = e.onclick;
      return (n) => {
        if (null != r && "function" == typeof r && !1 === r.bind(e)(n)) return;
        let i = ut(o).abButtonId;
        if (
          ((null != i && "" !== i) || (i = e.getAttribute("id") || void 0),
          null != o && "" !== o && 0 !== o.indexOf("#"))
        ) {
          const r =
              "blank" ===
              (e.getAttribute("target") || "").toLowerCase().replace("_", ""),
            u = s || t.openTarget === InAppMessage.OpenTarget.BLANK || r,
            a = () => {
              logInAppMessageHtmlClick(t, i, o), Y.openUri(o, u, n);
            };
          u ? a() : t.ye(c, a);
        } else logInAppMessageHtmlClick(t, i, o || void 0);
        return n.stopPropagation(), !1;
      };
    },
    m = (t, e, o) => {
      const r = `([\\w]+)\\s*=\\s*document.createElement\\(['"]${o}['"]\\)`,
        n = t.match(new RegExp(r));
      if (n) {
        const o = `${n[1]}.setAttribute("nonce", "${e}")`;
        return `${t.slice(0, n.index + n[0].length)};${o};${t.slice(
          n.index + n[0].length,
        )}`;
      }
      return null;
    };
  if (
    ((c.onload = () => {
      let s = null;
      if (null != u) {
        (s = document.createElement("html")), (s.innerHTML = t.message || "");
        const e = s.getElementsByTagName("style");
        for (let t = 0; t < e.length; t++) e[t].setAttribute("nonce", u);
        const o = s.getElementsByTagName("script");
        for (let t = 0; t < o.length; t++) {
          o[t].setAttribute("nonce", u),
            (o[t].innerHTML = o[t].innerHTML.replace(
              /<style>/g,
              `<style nonce='${u}'>`,
            ));
          const e = m(o[t].innerHTML, u, "script");
          e && (o[t].innerHTML = e);
          const r = m(o[t].innerHTML, u, "style");
          r && (o[t].innerHTML = r);
        }
      }
      const i = c.contentWindow;
      i.focus(), i.document.write(s ? s.innerHTML : t.message || "");
      const l = i.document.getElementsByTagName("head")[0];
      if (null != l) {
        if (t.Ae()) {
          const e = document.createElement("style");
          (e.innerHTML = t.css || ""),
            (e.id = t.Ce() || ""),
            null != u && e.setAttribute("nonce", u),
            l.appendChild(e);
        }
        const e = i.document.createElement("base");
        null != e && (e.setAttribute("target", "_parent"), l.appendChild(e));
      }
      const f = i.document.getElementsByTagName("title");
      f && f.length > 0 && c.setAttribute("title", f[0].textContent || "");
      const d = {
          closeMessage: function () {
            t.ye(c);
          },
          logClick: function () {
            logInAppMessageHtmlClick(t, ...arguments);
          },
          display: {},
          web: {},
        },
        requestPushPermission = function () {
          return function () {
            const t = arguments;
            import("../../Push/request-push-permission.js").then((o) => {
              e.fe()
                ? o.requestPushPermission(...Array.prototype.slice.call(t))
                : r.j.error(P);
            });
          };
        },
        p = {
          requestImmediateDataFlush: function () {
            const t = arguments;
            import("../../Core/request-immediate-data-flush.js").then(
              ({ requestImmediateDataFlush: requestImmediateDataFlush }) => {
                e.fe()
                  ? requestImmediateDataFlush(...Array.prototype.slice.call(t))
                  : r.j.error(P);
              },
            );
          },
          logCustomEvent: function () {
            const t = arguments;
            import("../../Core/log-custom-event.js").then(
              ({ logCustomEvent: logCustomEvent }) => {
                if (!e.fe()) return void r.j.error(P);
                logCustomEvent(...Array.prototype.slice.call(t));
              },
            );
          },
          logPurchase: function () {
            const t = arguments;
            import("../../Core/log-purchase.js").then(
              ({ logPurchase: logPurchase }) => {
                if (!e.fe()) return void r.j.error(P);
                logPurchase(...Array.prototype.slice.call(t));
              },
            );
          },
          unregisterPush: function () {
            const t = arguments;
            import("../../Push/unregister-push.js").then(
              ({ unregisterPush: unregisterPush }) => {
                e.fe()
                  ? unregisterPush(...Array.prototype.slice.call(t))
                  : r.j.error(P);
              },
            );
          },
          requestPushPermission: requestPushPermission(),
          changeUser: function () {
            const t = arguments;
            import("../../Core/change-user.js").then(
              ({ changeUser: changeUser }) => {
                if (!e.fe()) return void r.j.error(P);
                changeUser(...Array.prototype.slice.call(t));
              },
            );
          },
        },
        h = function (t) {
          return function () {
            p[t](...Array.prototype.slice.call(arguments));
          };
        };
      for (const t of oo(p)) d[t] = h(t);
      const b = [
          "setFirstName",
          "setLastName",
          "setEmail",
          "setGender",
          "setDateOfBirth",
          "setCountry",
          "setHomeCity",
          "setEmailNotificationSubscriptionType",
          "setLanguage",
          "addAlias",
          "setPushNotificationSubscriptionType",
          "setPhoneNumber",
          "setCustomUserAttribute",
          "addToCustomAttributeArray",
          "removeFromCustomAttributeArray",
          "incrementCustomUserAttribute",
          "setCustomLocationAttribute",
          "addToSubscriptionGroup",
          "removeFromSubscriptionGroup",
        ],
        g = function (t) {
          return function () {
            const e = Z();
            e && e[t](...Array.prototype.slice.call(arguments));
          };
        },
        y = {};
      for (let t = 0; t < b.length; t++) y[b[t]] = g(b[t]);
      d.getUser = function () {
        return y;
      };
      const A = { showFeed: o },
        j = function (e) {
          return function () {
            const o = arguments;
            t.ye(c, function () {
              A[e](...Array.prototype.slice.call(o));
            });
          };
        },
        C = d.display;
      for (const t of oo(A)) C[t] = j(t);
      const v = { registerAppboyPushMessages: requestPushPermission() },
        w = function (t) {
          return function () {
            v[t](...Array.prototype.slice.call(arguments));
          };
        },
        E = d.web;
      for (const t of oo(v)) E[t] = w(t);
      if (
        ((i.appboyBridge = d), (i.brazeBridge = d), t.Pe !== InAppMessage.qe.Ee)
      ) {
        const t = i.document.getElementsByTagName("a");
        for (let e = 0; e < t.length; e++) t[e].onclick = a(t[e]);
        const e = i.document.getElementsByTagName("button");
        for (let t = 0; t < e.length; t++) e[t].onclick = a(e[t]);
      }
      const $ = i.document.body;
      if (null != $) {
        t.Ne() && ($.id = t.htmlId || "");
        const e = document.createElement("hidden");
        (e.onclick = d.closeMessage),
          (e.className = "ab-programmatic-close-button"),
          $.appendChild(e);
      }
      i.dispatchEvent(new CustomEvent("ab.BridgeReady")),
        -1 !== c.className.indexOf("ab-start-hidden") &&
          ((c.className = c.className.replace("ab-start-hidden", "")), n(c)),
        document.activeElement !== c && c.focus();
    }),
    (c.className =
      "ab-in-app-message ab-start-hidden ab-html-message ab-modal-interactions"),
    Q.OS === V.de)
  ) {
    const e = document.createElement("div");
    return (
      (e.className = "ab-ios-scroll-wrapper"), e.appendChild(c), (t.Me = e), e
    );
  }
  return (t.Me = c), c;
}
