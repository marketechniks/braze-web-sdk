import { createCloseButton as o } from "../../util/component-utils.js";
import { detectSwipe as d, DIRECTIONS as c } from "../../util/dom-utils.js";
import { _handleBrazeAction as m } from "../../Core/handle-braze-action.js";
import { logCardDismissal } from "../index.js";
import r from "../../../shared-lib/braze-shared-lib.js";
export const TOP_IMPRESSION_DATA_ATTRIBUTE = "data-ab-had-top-impression";
export const BOTTOM_IMPRESSION_DATA_ATTRIBUTE = "data-ab-had-bottom-impression";
export function topHadImpression(t) {
  return null != t && !!t.getAttribute("data-ab-had-top-impression");
}
export function impressOnTop(t) {
  null != t && t.setAttribute("data-ab-had-top-impression", "true");
}
export function bottomHadImpression(t) {
  return null != t && !!t.getAttribute("data-ab-had-bottom-impression");
}
export function impressOnBottom(t) {
  null != t && t.setAttribute("data-ab-had-bottom-impression", "true");
}
export function markCardAsRead(t) {
  if (null != t) {
    const o = t.querySelectorAll(".ab-unread-indicator")[0];
    null != o && (o.className += " read");
  }
}
export function getCardId(t) {
  return t.getAttribute("data-ab-card-id");
}
export function _setImageAltText(t, o) {
  let e = "";
  t.title || t.description || (e = "Feed Image"), o.setAttribute("alt", e);
}
export function setCardHeight(t, o) {
  const e = o.querySelectorAll(".ab-image-area");
  let a,
    n = 0;
  e.length > 0 && (n = e[0].offsetWidth);
  for (const o of t)
    if (((a = o._), a && o.imageUrl && "number" == typeof o.aspectRatio)) {
      const t = n / o.aspectRatio;
      t && (a.style.height = `${t}px`);
    }
}
export function cardToHtml(t, logCardClick, e) {
  const a = document.createElement("div");
  (a.className = "ab-card ab-effect-card " + t.U),
    t.id &&
      (a.setAttribute("data-ab-card-id", t.id), a.setAttribute("id", t.id)),
    a.setAttribute("role", "article"),
    a.setAttribute("tabindex", "0");
  let n = "",
    i = !1;
  t.url && "" !== t.url && ((n = t.url), (i = !0));
  const s = (o) => (markCardAsRead(a), i && (logCardClick(t), m(n, e, o)), !1);
  if (t.pinned) {
    const t = document.createElement("div");
    t.className = "ab-pinned-indicator";
    const o = document.createElement("i");
    (o.className = "fa fa-star"), t.appendChild(o), a.appendChild(t);
  }
  if (t.imageUrl && "" !== t.imageUrl) {
    const o = document.createElement("div");
    o.className = "ab-image-area";
    const e = document.createElement("img");
    if (
      (e.setAttribute("src", t.imageUrl),
      (e.onload = () => {
        a.style.height = "auto";
      }),
      _setImageAltText(t, e),
      o.appendChild(e),
      (a.className += " with-image"),
      i && !t.V)
    ) {
      const t = document.createElement("a");
      t.setAttribute("href", n),
        (t.onclick = s),
        t.appendChild(o),
        a.appendChild(t);
    } else a.appendChild(o);
  }
  const u = document.createElement("div");
  if (((u.className = "ab-card-body"), t.dismissible)) {
    t.logCardDismissal = () => logCardDismissal(t);
    const e = o("Dismiss Card", void 0, t.dismissCard.bind(t));
    a.appendChild(e),
      d(u, c.W, (t) => {
        (a.className += " ab-swiped-left"), e.onclick(t);
      }),
      d(u, c.X, (t) => {
        (a.className += " ab-swiped-right"), e.onclick(t);
      });
  }
  let p = "",
    b = !1;
  if ((t.title && "" !== t.title && ((p = t.title), (b = !0)), b)) {
    const t = document.createElement("h1");
    if (
      ((t.className = "ab-title"),
      (t.id = r.Z.Y()),
      a.setAttribute("aria-labelledby", t.id),
      i)
    ) {
      const o = document.createElement("a");
      o.setAttribute("href", n),
        (o.onclick = s),
        o.appendChild(document.createTextNode(p)),
        t.appendChild(o);
    } else t.appendChild(document.createTextNode(p));
    u.appendChild(t);
  }
  const l = document.createElement("div");
  if (
    ((l.className = b ? "ab-description" : "ab-description ab-no-title"),
    (l.id = r.Z.Y()),
    a.setAttribute("aria-describedby", l.id),
    t.description && l.appendChild(document.createTextNode(t.description)),
    i)
  ) {
    const o = document.createElement("div");
    o.className = "ab-url-area";
    const e = document.createElement("a");
    e.setAttribute("href", n),
      t.linkText && e.appendChild(document.createTextNode(t.linkText)),
      (e.onclick = s),
      o.appendChild(e),
      l.appendChild(o);
  }
  u.appendChild(l), a.appendChild(u);
  const f = document.createElement("div");
  return (
    (f.className = "ab-unread-indicator"),
    t.viewed && (f.className += " read"),
    a.appendChild(f),
    (t._ = a),
    a
  );
}
