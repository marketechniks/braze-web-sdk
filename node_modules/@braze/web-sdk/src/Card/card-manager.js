import { ControlCard } from "./models/index.js";
import s from "../common/event-logger.js";
import t from "../models/request-result.js";
import r from "../../shared-lib/braze-shared-lib.js";
import { STORAGE_KEYS as i } from "../managers/storage-manager.js";
export default class a {
  constructor(s) {
    (this.u = s), (this.u = s);
  }
  h(n, o) {
    const e = new t();
    if ((n.p(), null == n.url || "" === n.url))
      return (
        r.j.info(
          `Card ${n.id} has no url. Not logging click to Braze servers.`,
        ),
        e
      );
    if (o && n.id && this.u) {
      const s = this.u.v(i.k.C) || {};
      (s[n.id] = !0), this.u.D(i.k.C, s);
    }
    const l = this.I([n]);
    if (null == l) return e;
    const u = o ? r.q.$ : r.q.B;
    return s.N(u, l);
  }
  A(n) {
    const o = new t();
    if (!n.F())
      return (
        r.j.info(
          `Card ${n.id} refused this dismissal. Ignoring analytics event.`,
        ),
        o
      );
    if (n.id && this.u) {
      const s = this.u.v(i.k.G) || {};
      (s[n.id] = !0), this.u.D(i.k.G, s);
    }
    const e = this.I([n]);
    return null == e ? o : s.N(r.q.H, e);
  }
  J(n, o) {
    const e = new t(!0),
      l = [],
      u = [];
    let a = {};
    this.u && (a = o ? this.u.v(i.k.K) || {} : this.u.v(i.k.L) || {});
    for (const s of n)
      s.M(),
        s instanceof ControlCard ? u.push(s) : l.push(s),
        s.id && (a[s.id] = !0);
    const h = this.I(l),
      c = this.I(u);
    if (null == h && null == c) return (e.O = !1), e;
    if ((this.u && (o ? this.u.D(i.k.K, a) : this.u.D(i.k.L, a)), null != h)) {
      const t = o ? r.q.P : r.q.R,
        n = s.N(t, h);
      e.S(n);
    }
    if (null != c && o) {
      const t = s.N(r.q.T, c);
      e.S(t);
    }
    return e;
  }
  I(s) {
    let t,
      r = null;
    for (let n = 0; n < s.length; n++)
      (t = s[n].id),
        null != t &&
          "" !== t &&
          ((r = r || {}), (r.ids = r.ids || []), r.ids.push(t));
    return r;
  }
}
