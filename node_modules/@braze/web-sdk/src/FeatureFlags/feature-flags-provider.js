import r from "../../shared-lib/braze-shared-lib.js";
import y from "../common/base-provider.js";
import e from "../managers/braze-instance.js";
import { STORAGE_KEYS as i } from "../managers/storage-manager.js";
import E from "../managers/subscription-manager.js";
import { randomInclusive as D } from "../util/math.js";
import C from "../util/net.js";
import {
  newFeatureFlagFromJson as st,
  newFeatureFlagFromSerializedValue as it,
} from "./feature-flag-factory.js";
import T from "../util/request-header-utils.js";
export default class er extends y {
  constructor(t, s, i) {
    super(),
      (this.yt = t),
      (this.$t = s),
      (this.u = i),
      (this.gi = []),
      (this.pi = 0),
      (this.yt = t),
      (this.$t = s),
      (this.u = i),
      (this.Fi = null),
      (this.wi = new E()),
      (this.ji = 10),
      (this.bi = null),
      (this.vi = null),
      e.Ht(this.wi);
  }
  Ss(t) {
    if ((!this.yt || this.yt.yi()) && null != t && t.feature_flags) {
      this.gi = [];
      for (const s of t.feature_flags) {
        const t = st(s);
        t && this.gi.push(t);
      }
      (this.pi = new Date().getTime()), this.Ti(), this.wi.Dt(this.gi);
    }
  }
  Di() {
    let t = {};
    this.u && (t = this.u.v(i.k.Ri));
    const s = {};
    for (const i in t) {
      const e = it(t[i]);
      e && (s[e.id] = e);
    }
    return s;
  }
  Ni() {
    var t;
    return (null === (t = this.u) || void 0 === t ? void 0 : t.v(i.k.qi)) || {};
  }
  xi(t) {
    this.u && this.u.D(i.k.qi, t);
  }
  ri(t) {
    return this.wi.It(t);
  }
  refreshFeatureFlags(t, s, i = !1, e = !0) {
    const r = () => {
      "function" == typeof s && s(), this.wi.Dt(this.gi);
    };
    if (!this.zi(i))
      return (
        !this.Fi &&
          this.yt &&
          (this.Fi = this.yt.Ci(() => {
            this.refreshFeatureFlags(t, s);
          })),
        void r()
      );
    if ((e && this.Ii(), !this.$t)) return void r();
    const h = this.$t.Bs({}, !0),
      a = this.$t.Hs(h, T.Os.Si);
    let o = !1;
    this.$t.Qs(h, () => {
      this.$t
        ? (T.Ws(this.u, T.Os.Si, new Date().valueOf()),
          C.Xs({
            url: `${this.$t.Ys()}/feature_flags/sync`,
            headers: a,
            data: h,
            O: (s) => {
              if (!this.$t.Zs(h, s, a)) return (o = !0), void r();
              this.$t.ti(),
                this.Ss(s),
                (o = !1),
                T.si(this.u, T.Os.Si, 1),
                "function" == typeof t && t();
            },
            error: (t) => {
              this.$t.ii(t, "retrieving feature flags"), (o = !0), r();
            },
            ei: () => {
              if (e && o && !this.vi) {
                T.hi(this.u, T.Os.Si);
                let e = this.bi;
                (null == e || e < 1e3 * this.ji) && (e = 1e3 * this.ji),
                  this.$i(Math.min(3e5, D(1e3 * this.ji, 3 * e)), t, s, i);
              }
            },
          }))
        : r();
    });
  }
  Ii() {
    null != this.vi && (clearTimeout(this.vi), (this.vi = null));
  }
  $i(t = 1e3 * this.ji, s, i, e = !1) {
    this.Ii(),
      (this.vi = window.setTimeout(() => {
        this.refreshFeatureFlags(s, i, e);
      }, t)),
      (this.bi = t);
  }
  zi(t) {
    if (!this.yt) return !1;
    if (!t) {
      const t = this.yt.Mi();
      if (null == t) return !1;
      let s = !1;
      if (!isNaN(t)) {
        if (-1 === t) return r.j.info("Feature flag refreshes not allowed"), !1;
        s = new Date().getTime() >= (this.pi || 0) + 1e3 * t;
      }
      if (!s)
        return (
          r.j.info(`Feature flag refreshes were rate limited to ${t} seconds`),
          !1
        );
    }
    return this.yt.yi();
  }
  Ti() {
    if (!this.u) return;
    const t = {};
    for (const s of this.gi) {
      const i = s.tt();
      t[s.id] = i;
    }
    this.u.D(i.k.Ri, t), this.u.D(i.k.Ui, this.pi);
  }
}
